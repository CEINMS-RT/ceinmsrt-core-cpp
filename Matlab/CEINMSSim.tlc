%% File : CEINMSSim.tlc
%% Created: Thu Sep  7 15:01:52 2017
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "CEINMSSim.cpp".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  CEINMSSim "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs
    
  extern void CEINMSSim_Outputs_wrapper(const real_T *EMG,
			const real_T *LMT,
			const real_T *MA,
			const real_T *Time,
			real_T *Torque,
			real_T *MusclesForce,
			real_T *Activations,
			real_T *FibreLengths,
			real_T *FibreVelocity,
			real_T *PenAngle,
			real_T *TendonLength,
			const int8_T  *subjectSpecificXml, const int_T  p_width0,
			const int8_T  *ExecutionXML, const int_T  p_width1);
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  %assign py3 = LibBlockOutputSignalAddr(3, "", "", 0)
  %assign py4 = LibBlockOutputSignalAddr(4, "", "", 0)
  %assign py5 = LibBlockOutputSignalAddr(5, "", "", 0)
  %assign py6 = LibBlockOutputSignalAddr(6, "", "", 0)
  %assign nelements1 = LibBlockParameterSize(P1)
  %assign param_width1 = nelements1[0] * nelements1[1]
  %if (param_width1) > 1
     %assign pp1 = LibBlockMatrixParameterBaseAddr(P1)
   %else
     %assign pp1 = LibBlockParameterAddr(P1, "", "", 0)
   %endif
  %assign nelements2 = LibBlockParameterSize(P2)
  %assign param_width2 = nelements2[0] * nelements2[1]
  %if (param_width2) > 1
     %assign pp2 = LibBlockMatrixParameterBaseAddr(P2)
   %else
     %assign pp2 = LibBlockParameterAddr(P2, "", "", 0)
   %endif
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  CEINMSSim_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<py0>, %<py1>, %<py2>, %<py3>, %<py4>, %<py5>, %<py6>,  %<pp1>, %<param_width1>, %<pp2>, %<param_width2>);

  %%
%endfunction


%% [EOF] CEINMSSim.tlc





